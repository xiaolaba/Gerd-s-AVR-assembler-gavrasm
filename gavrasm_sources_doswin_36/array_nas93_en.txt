{ 1} 'Unknown option on command line: ',
{ 2} 'Source file not found: ',
{ 3} 'Error ',
{ 4} 'File: ',
{ 5} 'Line: ',
{ 6} 'Source line: ',
{ 7} 'Warning ',
{ 8} 'List of symbols:',
{ 9} 'Type nDef nUsed Decimalval  Hexvalue Name',
{10} 'No symbols defined.',
{11} 'List of macros:',
{12} 'nLines nUsed nParams Name',
{13} '   No macros.',
{14} 'Including file ',
{15} 'Continuing file ',
{16} ' lines done.',
{17} 'Source file: ',
{18} 'Hex file:    ',
{19} 'Eeprom file: ',
{20} 'Compiled:    ',
{21} 'Pass:        ',
{22} 'Compiling ',
{23} ' words code, ',
{24} ' words constants, total=',
{25} 'No warnings!',
{26} 'One warning!',
{27} ' warnings!',
{28} 'Compilation completed, no errors.',
{29} 'Program             : ',
{30} 'Constants           : ',
{31} 'Total program memory: ',
{32} 'Eeprom space        : ',
{33} 'Data segment        : ',
{34} 'Compilation endet ',
{35} 'Compilation aborted, ',
{36} 'one error!',
{37} ' errors!',
{38} ' Bye, bye ...',
{39} 'not even', { even register instruction! }
{40} ' \\ Instruction has no parameters!',
{41} 'register in the range from R0 to R31',
{42} 'bit value in the range from 0 to 7',
{43} 'relative jump adress (label) in the range from -64 to +63',
{44} 'absolute jump adress (label), 16/22-bit-adress',
{45} 'none or register and Z or register and Z+',
{46} 'relative jump adress (label) in the range +/- 2k',
{47} 'register in the range from R16 to R31',
{48} 'double register R24, R26, R28 or R30',
{49} 'lower port value between 0 and 31',
{50} 'register in the range from R16 to R23',
{51} 'even register (R0, R2 ... R30',
{52} 'port value in the range from 0 to 63',
{53} 'X/Y/Z or X+/Y+/Z+ or -X/-Y/-Z',
{54} 'Y+distance or Z+distance, range 0..63',
{55} '16-bit SRAM adress',
{56} 'Constant in the range 0..63',
{57} 'Constant in the range 0..255',
{58} 'parameter',
{59} 'Internal compiler error! Please report to gavrasm@avr-asm-tutorial.net!',
{60} 'See the list of directives with gavrasm -d!',
{61} 'List of supported directives',
{62} '.BYTE x   : reserves x bytes in the data segment (see .DSEG)',
{63} '.CSEG     : compiles into the code segment',
{64} '.DB x,y,z : inserts Bytes, chars or strings (.CSEG, ESEG)',
{65} '.DEF x=y  : symbol name x is attached to register y',
{66} '.DEVICE x : check the code for the AVR type x',
{67} '.DSEG     : data segment, only labels and .BYTE directives',
{68} '.DW x,y,z : insert words (.CSEG, .ESEG)',
{69} '.ELIF x   : .ELSE with condition x',
{70} '.ELSE     : alternative code, if .IF-condition was false',
{71} '.ENDIF    : closes .IF resp. .ELSE or .ELIF',
{72} '.EQU x=y  : the symbol x is set to the constant value y',
{73} '.ERROR x  : forces an error with the message x',
{74} '.ESEG     : compiles to the Eeprom segment',
{75} '.EXIT [x] : closes source file, x is a logical expression',
{76} '.IF x     : compiles the code, if x is true',
{77} '.IFDEF x  : compiles the code if variable x is defined',
{78} '.IFDEVICE type: compiles the code if the type is correct',
{79} '.IFNDEF x : compiles the code if variable x is undefined',
{80} '.INCLUDE x: inserts the file "path/name" into the source',
{81} '.MESSAGE x: displays the message x',
{82} '.LIST     : switches list output on',
{83} '.LISTMAC  : switches list output for macros on',
{84} '.MACRO x  : define macro named x',
{85} '.ENDMACRO : closes the current macro definition (see .ENDM)',
{86} '.ENDM     : the same as .ENDMACRO',
{87} '.NOLIST   : switches list output off',
{88} '.ORG x    : sets the CSEG-/ESEG-/DSEG-counter to value x',
{89} '.SET x=y  : sets the variable symbol x to the value y',
{90} '.SETGLOBAL x,y,z: globalize the local symbols x, y and z',
{91} '.UNDEF x  : undefines the symbol x',
{92} 'Constant in the range 0..15',
{93} 'Pointer Z');